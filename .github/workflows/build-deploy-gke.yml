name: Build and Deploy to GKE (added latest tag)

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GAR_LOCATION: us
  GKE_CLUSTER: cluster-tpg
  GKE_ZONE: us-central1-a
  DEPLOYMENT_NAME: laravel-kubernetes-demo
  REPOSITORY: tpg
  IMAGE: laravel-kubernetes-demo

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

#     # Configure Workload Identity Federation and generate an access token. 
#     - id: 'auth'
#       name: 'Authenticate to Google Cloud'
#       uses: 'google-github-actions/auth@v0'
#       with:
#         token_format: 'access_token'
#         workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
#         service_account: 'my-service-account@my-project.iam.gserviceaccount.com'

    # Authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        credentials_json: '${{ secrets.SA_KEY }}'

    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Build the Docker image 
    - name: Build
      run: |-
        docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE" --all-tags
    # Deploy to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f ./kube/deployment.yaml
        kubectl apply -f ./kube/service.yaml
        kubectl apply -f ./kube/ingress.yaml
